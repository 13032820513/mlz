<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlz.mapper.PayMapper">
  <resultMap id="BaseResultMap" type="com.mlz.entity.pojo.Pay">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_no" jdbcType="CHAR" property="payNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="total_fax" jdbcType="DECIMAL" property="totalFax" />
    <result column="pay_type" jdbcType="BIT" property="payType" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="trade_account" jdbcType="VARCHAR" property="tradeAccount" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mlz.entity.pojo.Pay">
    <result column="order_response" jdbcType="LONGVARCHAR" property="orderResponse" />
    <result column="order_callback" jdbcType="LONGVARCHAR" property="orderCallback" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_no, user_id, merchant_id, order_id, type, total_amount, total_fax, pay_type, 
    pay_time, pay_account, trade_no, trade_account, status, createtime, updatetime, deleted
  </sql>
  <sql id="Blob_Column_List">
    order_response, order_callback
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mlz.entity.example.PayExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jia_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mlz.entity.example.PayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jia_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jia_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jia_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mlz.entity.example.PayExample">
    delete from jia_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mlz.entity.pojo.Pay">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_pay (pay_no, user_id, merchant_id, 
      order_id, type, total_amount, 
      total_fax, pay_type, pay_time, 
      pay_account, trade_no, trade_account, 
      status, createtime, updatetime, 
      deleted, order_response, order_callback
      )
    values (#{payNo,jdbcType=CHAR}, #{userId,jdbcType=INTEGER}, #{merchantId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{totalAmount,jdbcType=DECIMAL}, 
      #{totalFax,jdbcType=DECIMAL}, #{payType,jdbcType=BIT}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payAccount,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{tradeAccount,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{orderResponse,jdbcType=LONGVARCHAR}, #{orderCallback,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mlz.entity.pojo.Pay">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payNo != null">
        pay_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="totalFax != null">
        total_fax,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payAccount != null">
        pay_account,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="tradeAccount != null">
        trade_account,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="orderResponse != null">
        order_response,
      </if>
      <if test="orderCallback != null">
        order_callback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payNo != null">
        #{payNo,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalFax != null">
        #{totalFax,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=BIT},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeAccount != null">
        #{tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="orderResponse != null">
        #{orderResponse,jdbcType=LONGVARCHAR},
      </if>
      <if test="orderCallback != null">
        #{orderCallback,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mlz.entity.example.PayExample" resultType="java.lang.Long">
    select count(*) from jia_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jia_pay
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payNo != null">
        pay_no = #{record.payNo,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalFax != null">
        total_fax = #{record.totalFax,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=BIT},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payAccount != null">
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeAccount != null">
        trade_account = #{record.tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.orderResponse != null">
        order_response = #{record.orderResponse,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.orderCallback != null">
        order_callback = #{record.orderCallback,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update jia_pay
    set id = #{record.id,jdbcType=INTEGER},
      pay_no = #{record.payNo,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      total_fax = #{record.totalFax,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=BIT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      trade_account = #{record.tradeAccount,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      order_response = #{record.orderResponse,jdbcType=LONGVARCHAR},
      order_callback = #{record.orderCallback,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jia_pay
    set id = #{record.id,jdbcType=INTEGER},
      pay_no = #{record.payNo,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      total_fax = #{record.totalFax,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=BIT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      trade_account = #{record.tradeAccount,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlz.entity.pojo.Pay">
    update jia_pay
    <set>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalFax != null">
        total_fax = #{totalFax,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=BIT},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null">
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeAccount != null">
        trade_account = #{tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="orderResponse != null">
        order_response = #{orderResponse,jdbcType=LONGVARCHAR},
      </if>
      <if test="orderCallback != null">
        order_callback = #{orderCallback,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mlz.entity.pojo.Pay">
    update jia_pay
    set pay_no = #{payNo,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      total_fax = #{totalFax,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=BIT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      trade_account = #{tradeAccount,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      order_response = #{orderResponse,jdbcType=LONGVARCHAR},
      order_callback = #{orderCallback,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlz.entity.pojo.Pay">
    update jia_pay
    set pay_no = #{payNo,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      total_fax = #{totalFax,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=BIT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      trade_account = #{tradeAccount,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>