<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlz.mapper.MerchantWalletMapper">
  <resultMap id="BaseResultMap" type="com.mlz.entity.pojo.MerchantWallet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="amount_money" jdbcType="DECIMAL" property="amountMoney" />
    <result column="income_time" jdbcType="TIMESTAMP" property="incomeTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_id, order_id, type, amount_money, income_time, status, createtime, updatetime, 
    deleted
  </sql>
  <select id="selectByExample" parameterType="com.mlz.entity.pojo.MerchantWalletExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jia_merchant_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jia_merchant_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jia_merchant_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mlz.entity.pojo.MerchantWalletExample">
    delete from jia_merchant_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mlz.entity.pojo.MerchantWallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_merchant_wallet (merchant_id, order_id, type, 
      amount_money, income_time, status, 
      createtime, updatetime, deleted
      )
    values (#{merchantId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{amountMoney,jdbcType=DECIMAL}, #{incomeTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mlz.entity.pojo.MerchantWallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_merchant_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amountMoney != null">
        amount_money,
      </if>
      <if test="incomeTime != null">
        income_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="amountMoney != null">
        #{amountMoney,jdbcType=DECIMAL},
      </if>
      <if test="incomeTime != null">
        #{incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mlz.entity.pojo.MerchantWalletExample" resultType="java.lang.Long">
    select count(*) from jia_merchant_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jia_merchant_wallet
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.amountMoney != null">
        amount_money = #{record.amountMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.incomeTime != null">
        income_time = #{record.incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jia_merchant_wallet
    set id = #{record.id,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      amount_money = #{record.amountMoney,jdbcType=DECIMAL},
      income_time = #{record.incomeTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlz.entity.pojo.MerchantWallet">
    update jia_merchant_wallet
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="amountMoney != null">
        amount_money = #{amountMoney,jdbcType=DECIMAL},
      </if>
      <if test="incomeTime != null">
        income_time = #{incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlz.entity.pojo.MerchantWallet">
    update jia_merchant_wallet
    set merchant_id = #{merchantId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      amount_money = #{amountMoney,jdbcType=DECIMAL},
      income_time = #{incomeTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>