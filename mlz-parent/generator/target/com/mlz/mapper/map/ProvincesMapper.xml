<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlz.mapper.ProvincesMapper">
  <resultMap id="BaseResultMap" type="com.mlz.entity.pojo.Provinces">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="depth" jdbcType="BIT" property="depth" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="merger_name" jdbcType="VARCHAR" property="mergerName" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="pinyin" jdbcType="VARCHAR" property="pinyin" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, city_name, parent_id, short_name, depth, city_code, zip_code, merger_name, longitude, 
    latitude, pinyin, deleted
  </sql>
  <select id="selectByExample" parameterType="com.mlz.entity.pojo.ProvincesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jia_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jia_provinces
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jia_provinces
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mlz.entity.pojo.ProvincesExample">
    delete from jia_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mlz.entity.pojo.Provinces">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_provinces (city_name, parent_id, short_name, 
      depth, city_code, zip_code, 
      merger_name, longitude, latitude, 
      pinyin, deleted)
    values (#{cityName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{shortName,jdbcType=VARCHAR}, 
      #{depth,jdbcType=BIT}, #{cityCode,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, 
      #{mergerName,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{pinyin,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.mlz.entity.pojo.Provinces">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jia_provinces
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityName != null">
        city_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="depth != null">
        depth,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="mergerName != null">
        merger_name,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="depth != null">
        #{depth,jdbcType=BIT},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="mergerName != null">
        #{mergerName,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mlz.entity.pojo.ProvincesExample" resultType="java.lang.Long">
    select count(*) from jia_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jia_provinces
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.depth != null">
        depth = #{record.depth,jdbcType=BIT},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.mergerName != null">
        merger_name = #{record.mergerName,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.pinyin != null">
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jia_provinces
    set id = #{record.id,jdbcType=INTEGER},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      depth = #{record.depth,jdbcType=BIT},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      merger_name = #{record.mergerName,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlz.entity.pojo.Provinces">
    update jia_provinces
    <set>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="depth != null">
        depth = #{depth,jdbcType=BIT},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="mergerName != null">
        merger_name = #{mergerName,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlz.entity.pojo.Provinces">
    update jia_provinces
    set city_name = #{cityName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      short_name = #{shortName,jdbcType=VARCHAR},
      depth = #{depth,jdbcType=BIT},
      city_code = #{cityCode,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      merger_name = #{mergerName,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>